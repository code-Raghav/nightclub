import Head from "next/head";
import { auth, db } from "../../firebaseConfig";
import { useAuthState } from "react-firebase-hooks/auth";
import { useForm } from "react-hook-form";
import { getAuth, updateProfile } from "firebase/auth";
import { doc, setDoc, getDoc } from "firebase/firestore";
import { useState, useEffect } from "react";

export default function Profile() {
  //required for name change
  const auth = getAuth();
  const [user, setUser] = useAuthState(auth);
  const { register, handleSubmit } = useForm();
  const [phone, setPhone] = useState("");

  //For updating the user name(WORKS)
  const updateName = (data) => {
    console.log(data);

    updateProfile(auth.currentUser, {
      displayName: data.name,
    })
      .then(() => {
        console.log("User name Updated!");
      })
      .catch((error) => {
        // An error occurred
        // ...
      });
  };
  const updatePhone = (data) => {
    setDoc(doc(db, "users", user.email), {
      name: user && user.displayName ? user.displayName : "NoName",
      emailID: user && user.email ? user.email : "NoEmail",
      phoneNumber: "+91" + data.phone,
    });
    console.log("Added to database!");
  };
  //Retrieve phone number
  const phoneRetrieve = async () => {
    if (user) {
      const docRef = doc(db, "users", user.email);
      const docSnap = await getDoc(docRef);
      if (!docSnap.data().phoneNumber) {
        Router.replace("/Profile");
      } else {
        console.log("Phone number exists: " + docSnap.data().phoneNumber);
        setPhone(docSnap.data().phoneNumber.slice(3));
      }
    }
  };
  useEffect(() => {
    phoneRetrieve();
  }, [user]);

  return (
    <>
      <Head>
        <title>Profile</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div>
          <div>Name: {user ? user.displayName : ""}</div>
          <div>Email: {user ? user.email : ""}</div>
        </div>

        <form onSubmit={handleSubmit(updateName)}>
          <label htmlFor="name">Name</label>
          <input
            type="name"
            defaultValue={user ? user.displayName : ""}
            {...register("name", { required: true })}
          />

          <button>Submit</button>
        </form>
        <form onSubmit={handleSubmit(updatePhone)}>
          <label htmlFor="phone">Phone Number</label>
          <input
            type="phone"
            defaultValue={user && phone ? phone : ""}
            {...register("phone", {
              required: true,
              minLength: 10,
              maxLength: 10,
            })}
          />

          <button>Submit</button>
        </form>
      </main>
    </>
  );
}
